// Code generated by protoc-gen-go.
// source: authms.proto
// DO NOT EDIT!

/*
Package authms is a generated protocol buffer package.

It is generated from these files:
	authms.proto

It has these top-level messages:
	History
	AppID
	Value
	User
	Request
	Response
*/
package authms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type History struct {
	Id            int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserID        int64  `protobuf:"varint,2,opt,name=userID" json:"userID,omitempty"`
	IpAddress     string `protobuf:"bytes,3,opt,name=ipAddress" json:"ipAddress,omitempty"`
	Date          string `protobuf:"bytes,4,opt,name=date" json:"date,omitempty"`
	AccessType    string `protobuf:"bytes,5,opt,name=accessType" json:"accessType,omitempty"`
	SuccessStatus bool   `protobuf:"varint,6,opt,name=successStatus" json:"successStatus,omitempty"`
}

func (m *History) Reset()                    { *m = History{} }
func (m *History) String() string            { return proto.CompactTextString(m) }
func (*History) ProtoMessage()               {}
func (*History) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AppID struct {
	AppName   string `protobuf:"bytes,1,opt,name=appName" json:"appName,omitempty"`
	AppUserID string `protobuf:"bytes,2,opt,name=appUserID" json:"appUserID,omitempty"`
	Verified  bool   `protobuf:"varint,3,opt,name=verified" json:"verified,omitempty"`
}

func (m *AppID) Reset()                    { *m = AppID{} }
func (m *AppID) String() string            { return proto.CompactTextString(m) }
func (*AppID) ProtoMessage()               {}
func (*AppID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Value struct {
	Value    string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified" json:"verified,omitempty"`
}

func (m *Value) Reset()                    { *m = Value{} }
func (m *Value) String() string            { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()               {}
func (*Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type User struct {
	Id           int64      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Token        string     `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Password     string     `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Username     string     `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	LoginHistory []*History `protobuf:"bytes,5,rep,name=loginHistory" json:"loginHistory,omitempty"`
	Phone        *Value     `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Mail         *Value     `protobuf:"bytes,7,opt,name=mail" json:"mail,omitempty"`
	AppID        *AppID     `protobuf:"bytes,8,opt,name=appID" json:"appID,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *User) GetLoginHistory() []*History {
	if m != nil {
		return m.LoginHistory
	}
	return nil
}

func (m *User) GetPhone() *Value {
	if m != nil {
		return m.Phone
	}
	return nil
}

func (m *User) GetMail() *Value {
	if m != nil {
		return m.Mail
	}
	return nil
}

func (m *User) GetAppID() *AppID {
	if m != nil {
		return m.AppID
	}
	return nil
}

type Request struct {
	DeviceID         string `protobuf:"bytes,1,opt,name=deviceID" json:"deviceID,omitempty"`
	ForServiceID     string `protobuf:"bytes,2,opt,name=forServiceID" json:"forServiceID,omitempty"`
	RefererServiceID string `protobuf:"bytes,3,opt,name=refererServiceID" json:"refererServiceID,omitempty"`
	User             *User  `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Request) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Response struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Code   int32  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	User   *User  `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Detail string `protobuf:"bytes,4,opt,name=detail" json:"detail,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Response) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*History)(nil), "History")
	proto.RegisterType((*AppID)(nil), "AppID")
	proto.RegisterType((*Value)(nil), "Value")
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*Response)(nil), "Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AuthMS service

type AuthMSClient interface {
	Register(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	Login(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	ValidateToken(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type authMSClient struct {
	c           client.Client
	serviceName string
}

func NewAuthMSClient(serviceName string, c client.Client) AuthMSClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "authms"
	}
	return &authMSClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *authMSClient) Register(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthMS.Register", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authMSClient) Login(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthMS.Login", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authMSClient) ValidateToken(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthMS.ValidateToken", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthMS service

type AuthMSHandler interface {
	Register(context.Context, *Request, *Response) error
	Login(context.Context, *Request, *Response) error
	ValidateToken(context.Context, *Request, *Response) error
}

func RegisterAuthMSHandler(s server.Server, hdlr AuthMSHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AuthMS{hdlr}, opts...))
}

type AuthMS struct {
	AuthMSHandler
}

func (h *AuthMS) Register(ctx context.Context, in *Request, out *Response) error {
	return h.AuthMSHandler.Register(ctx, in, out)
}

func (h *AuthMS) Login(ctx context.Context, in *Request, out *Response) error {
	return h.AuthMSHandler.Login(ctx, in, out)
}

func (h *AuthMS) ValidateToken(ctx context.Context, in *Request, out *Response) error {
	return h.AuthMSHandler.ValidateToken(ctx, in, out)
}

func init() { proto.RegisterFile("authms.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x49, 0x9b, 0xb4, 0xc9, 0xb4, 0x8b, 0xd0, 0x68, 0x85, 0x42, 0xb5, 0x5a, 0x95, 0x08,
	0xa1, 0x0a, 0xa1, 0x1c, 0xca, 0x89, 0x63, 0xa5, 0x1e, 0xa8, 0x04, 0x1c, 0xdc, 0x65, 0x2f, 0x9c,
	0x4c, 0x33, 0xdd, 0x5a, 0xb4, 0xb5, 0xb1, 0x9d, 0xa2, 0x7d, 0x0b, 0x5e, 0x83, 0x57, 0xe3, 0x29,
	0x90, 0x1d, 0x6f, 0xff, 0x50, 0xf6, 0xe6, 0xef, 0xfb, 0xe2, 0xf1, 0xe4, 0x37, 0x36, 0xf4, 0x79,
	0x6d, 0x57, 0x1b, 0x53, 0x2a, 0x2d, 0xad, 0x2c, 0x7e, 0x47, 0xd0, 0xfd, 0x20, 0x8c, 0x95, 0xfa,
	0x1e, 0x9f, 0x42, 0x4b, 0x54, 0x79, 0x34, 0x8c, 0x46, 0x6d, 0xd6, 0x12, 0x15, 0x3e, 0x87, 0x4e,
	0x6d, 0x48, 0xcf, 0xa6, 0x79, 0xcb, 0x7b, 0x41, 0xe1, 0x15, 0x64, 0x42, 0x4d, 0xaa, 0x4a, 0x93,
	0x31, 0x79, 0x7b, 0x18, 0x8d, 0x32, 0x76, 0x30, 0x10, 0x21, 0xae, 0xb8, 0xa5, 0x3c, 0xf6, 0x81,
	0x5f, 0xe3, 0x35, 0x00, 0x5f, 0x2c, 0xc8, 0x98, 0x9b, 0x7b, 0x45, 0x79, 0xe2, 0x93, 0x23, 0x07,
	0x5f, 0xc1, 0x85, 0xa9, 0xbd, 0x9c, 0x5b, 0x6e, 0x6b, 0x93, 0x77, 0x86, 0xd1, 0x28, 0x65, 0xa7,
	0x66, 0xf1, 0x15, 0x92, 0x89, 0x52, 0xb3, 0x29, 0xe6, 0xd0, 0xe5, 0x4a, 0x7d, 0xe6, 0x1b, 0xf2,
	0xdd, 0x66, 0xec, 0x41, 0xba, 0xd6, 0xb8, 0x52, 0x5f, 0x0e, 0x5d, 0x67, 0xec, 0x60, 0xe0, 0x00,
	0xd2, 0x1d, 0x69, 0xb1, 0x14, 0x54, 0xf9, 0xbe, 0x53, 0xb6, 0xd7, 0xc5, 0x7b, 0x48, 0x6e, 0xf9,
	0xba, 0x26, 0xbc, 0x84, 0x64, 0xe7, 0x16, 0xa1, 0x74, 0x23, 0x4e, 0xb6, 0xb6, 0xfe, 0xd9, 0xfa,
	0x27, 0x82, 0xd8, 0x9d, 0x70, 0x06, 0xf0, 0x12, 0x12, 0x2b, 0xbf, 0xd3, 0x36, 0x74, 0xd2, 0x08,
	0x57, 0x4a, 0x71, 0x63, 0x7e, 0x4a, 0x5d, 0x05, 0x7a, 0x7b, 0xed, 0x32, 0x07, 0x79, 0xeb, 0x7e,
	0xad, 0x01, 0xb8, 0xd7, 0xf8, 0x16, 0xfa, 0x6b, 0x79, 0x27, 0xb6, 0x61, 0x5c, 0x79, 0x32, 0x6c,
	0x8f, 0x7a, 0xe3, 0xb4, 0x0c, 0x9a, 0x9d, 0xa4, 0x78, 0x05, 0x89, 0x5a, 0xc9, 0x2d, 0x79, 0x94,
	0xbd, 0x71, 0xa7, 0xf4, 0x7f, 0xc7, 0x1a, 0x13, 0x07, 0x10, 0x6f, 0xb8, 0x58, 0xe7, 0xdd, 0x93,
	0xd0, 0x7b, 0x6e, 0x27, 0x77, 0x98, 0xf3, 0x34, 0x84, 0x1e, 0x3a, 0x6b, 0xcc, 0xe2, 0x57, 0x04,
	0x5d, 0x46, 0x3f, 0x6a, 0x32, 0xd6, 0x75, 0x5b, 0xd1, 0x4e, 0x2c, 0x68, 0x36, 0x0d, 0xb4, 0xf6,
	0x1a, 0x0b, 0xe8, 0x2f, 0xa5, 0x9e, 0x93, 0x0e, 0x79, 0x83, 0xe0, 0xc4, 0xc3, 0x37, 0xf0, 0x4c,
	0xd3, 0x92, 0x34, 0x1d, 0x7d, 0xd7, 0x10, 0x39, 0xf3, 0xf1, 0x05, 0xc4, 0x8e, 0x84, 0xa7, 0xd2,
	0x1b, 0x27, 0xa5, 0x03, 0xce, 0xbc, 0x55, 0x70, 0x48, 0x19, 0x19, 0x25, 0xb7, 0x86, 0x8e, 0x46,
	0x90, 0xf9, 0x11, 0x20, 0xc4, 0x0b, 0x59, 0x91, 0x3f, 0x3e, 0x61, 0x7e, 0xbd, 0x2f, 0xd5, 0x3e,
	0x2b, 0xe5, 0xae, 0x7c, 0x45, 0xd6, 0x91, 0x69, 0xe8, 0x07, 0x35, 0x36, 0xd0, 0x99, 0xd4, 0x76,
	0xf5, 0x69, 0x8e, 0x2f, 0xdd, 0x61, 0x77, 0xc2, 0x58, 0xd2, 0x98, 0x96, 0x81, 0xc4, 0x20, 0x2b,
	0x1f, 0x3a, 0x28, 0x9e, 0xe0, 0x35, 0x24, 0x1f, 0xdd, 0x28, 0x1e, 0xcb, 0x5f, 0xc3, 0xc5, 0x2d,
	0x5f, 0x0b, 0xf7, 0x32, 0x6e, 0xfc, 0x8d, 0xf8, 0xff, 0x77, 0xdf, 0x3a, 0xfe, 0x89, 0xbe, 0xfb,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0x33, 0x61, 0x8e, 0x93, 0xb2, 0x03, 0x00, 0x00,
}
